import Head from "next/head";
import useInterval from "@/utils/useInterval";
import useKeyboardControl from "@/utils/useKeyboardControl";
import React, { useEffect, useRef, useState } from "react";
import { motion } from "framer-motion";

import { BOARD_SIZE, FIELD_SIZE } from "@/pacman";
import { DirectionsType } from "@/pacman";
import { Game, PacMan, Point, Wall } from "@/pacman/pacman";

const game = new Game();

import Walls from "@/components/Walls";
import Pills from "@/components/Pills";
import Pacman from "@/components/Pacman";
import Ghost from "@/components/Ghost";
import Board from "@/components/Board";
import BoardCell from "@/components/BoardCell";
import BoardMovingCell from "@/components/BoardMovingCell";
import BoardGrid from "@/components/BoardGrid";

export default function Home() {
  const [position, setPosition] = useState(game.pacMan.getPosition());
  const [ghostPosition, setGhostPosition] = useState(game.ghosts[0].getPosition());
  const [pills, setPills] = useState(game.board.pills);
  const [points, setPoints] = useState(game.points);
  const [pacManDirection, setPacManDirection] = useState(game.pacMan.direction);
  const { direction, paused } = useKeyboardControl({
    onChange(intendedDirection) {
      game.pacMan.tryToChangeDirection(intendedDirection);
      setPacManDirection(game.pacMan.direction);
    },
    onEscape: () => {},
    onSpace: () => {},
  });

  const makeStep = () => {
    if (paused) return;
    game.pacMan.move(game.pacMan.direction);
    setPosition({ ...game.pacMan.getPosition() });
    setPills([...game.board.pills]);
    setPoints(game.points);
    game.makeGameStep();
    setGhostPosition(game.ghosts[0].getPosition());
  };

  const setInterval = useInterval(makeStep, 300);

  const testPath = [
    { x: 1, y: 2 },
    { x: 2, y: 2 },
    { x: 3, y: 2 },
    { x: 4, y: 2 },
  ];

  return (
    <>
      <Head>
        <title>Pac Man</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-pink-600">
        {position.x}:{position.y} || Points: {points}
      </main>

      <Board>
        <BoardGrid />
        <BoardMovingCell position={position}>
          <Pacman size={FIELD_SIZE} direction={pacManDirection} />
        </BoardMovingCell>
        <BoardMovingCell position={ghostPosition} duration={0.6}>
          <Ghost size={FIELD_SIZE} direction={"R"} color="green" />
        </BoardMovingCell>
        <Walls walls={game.board.walls} />
        <Pills pills={pills} />

        {game.ghosts[0].path.map((el, ind) => (
          <div
            key={ind}
            className={`absolute flex justify-center items-center`}
            style={{
              width: FIELD_SIZE,
              height: FIELD_SIZE,
              left: el.x * FIELD_SIZE,
              top: el.y * FIELD_SIZE,
            }}>
            <div className="w-1/2 h-1/2" style={{ backgroundColor: game.ghosts[0].color }}></div>
          </div>
        ))}
        {game.ghosts[1].path.map((el, ind) => (
          <div
            key={ind}
            className={`absolute flex justify-center items-center`}
            style={{
              width: FIELD_SIZE,
              height: FIELD_SIZE,
              left: el.x * FIELD_SIZE,
              top: el.y * FIELD_SIZE,
            }}>
            <div className="w-1/2 h-1/2" style={{ backgroundColor: game.ghosts[1].color }}></div>
          </div>
        ))}
      </Board>
    </>
  );
}
